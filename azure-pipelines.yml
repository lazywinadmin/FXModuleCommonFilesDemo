# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  - group: psgallery
jobs:

  - job: 'Testing on Windows Server'
    pool:
      vmImage: windows-latest
    steps:
    - pwsh: .\build.ps1 -InstallDependencies:$true -verbose -tasks 'setEnvironment','build','test'
      displayName: 'PowerShell - Build > Test'
      env:
        psgallerykey: $(psgallerykey)

    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/TEST-*.xml'
      inputs:
        testResultsFormat: NUnit

  - job: 'Testing on Windows Server Core 1803'
    pool:
      vmImage: win1803
    steps:
    - pwsh: .\build.ps1 -InstallDependencies:$true -verbose -tasks 'setEnvironment','build','test'
      displayName: 'PowerShell - Build > Test'
      env:
        psgallerykey: $(psgallerykey)

    - task: PublishTestResults@2
      displayName: 'Publish Test Results **/TEST-*.xml'
      inputs:
        testResultsFormat: NUnit

  - job: 'Testing on Ubuntu'
    pool:
      vmImage: ubuntu-latest
    steps:
      - pwsh: ./build.ps1 -InstallDependencies:$true -verbose -tasks 'setEnvironment','build','test'
        displayName: 'PowerShell - Build > Test'
        env:
          psgallerykey: $(psgallerykey)

      - task: PublishTestResults@2
        displayName: 'Publish Test Results **/TEST-*.xml'
        inputs:
          testResultsFormat: NUnit

  - job: 'Testing on MacOS'
    pool:
      vmImage: macOS-latest
    steps:
      - pwsh: ./build.ps1 -InstallDependencies:$true -verbose -tasks 'setEnvironment','build','test'
        displayName: 'PowerShell - Build > Test'
        env:
          psgallerykey: $(psgallerykey)

      - task: PublishTestResults@2
        displayName: 'Publish Test Results **/TEST-*.xml'
        inputs:
          testResultsFormat: NUnit


# variables:
# - group: psgallery
# trigger:
# - master
# resources:
# - repo: self
# queue:
#   name: Hosted VS2017
# steps:
# - powershell: |
#     .\build.ps1 -InstallDependencies:$true -verbose -tasks 'setEnvironment','build','test','deploy'
#   displayName: 'PowerShell - Build > Test > Deploy'
#   env:
#     psgallerykey: $(psgallerykey)

# - task: PublishTestResults@2
#   displayName: 'Publish Test Results **/TEST-*.xml'
#   inputs:
#     testResultsFormat: NUnit